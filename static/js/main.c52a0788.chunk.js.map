{"version":3,"sources":["components/HomePage/HomePage.tsx","components/NavBar/NavBar.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NavBar","role","isActive","cn","to","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","onSelectedPerson","slug","name","onClick","sex","PeopleTable","people","preparedPeople","map","mother","find","motherName","father","fatherName","useState","selectedPerson","setSelectedPerson","born","died","PeoplePage","isError","setIsError","isLoading","setIsLoading","setPeople","isEmpty","setIsEmpty","useEffect","result","length","catch","finally","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c52a0788.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <>\n    <h1 className=\"title\">Home Page</h1>\n  </>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const NavBar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n  onSelectedPerson: ((selectedPerson: string) => void)\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, onSelectedPerson }) => {\n  const { slug, name } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      onClick={() => onSelectedPerson(slug)}\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport React, { useState } from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const preparedPeople = people.map((person) => ({\n    ...person,\n    mother: people.find((mother) => mother.name === person.motherName),\n    father: people.find((father) => father.name === person.fatherName),\n  }));\n\n  const [selectedPerson, setSelectedPerson] = useState('');\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"\n        table\n        is-striped\n        is-hoverable\n        is-narrow\n        is-fullwidth\n      \"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {preparedPeople.map((person) => {\n          const {\n            sex,\n            born,\n            died,\n            slug,\n            motherName,\n            fatherName,\n            mother,\n            father,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={cn({\n                'has-background-warning': selectedPerson === person.slug,\n              })}\n            >\n              <td>\n                <PersonLink\n                  onSelectedPerson={setSelectedPerson}\n                  person={person}\n                />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother ? (\n                  <PersonLink\n                    onSelectedPerson={setSelectedPerson}\n                    person={mother}\n                  />\n                ) : (\n                  motherName || '-'\n                )}\n              </td>\n              <td>\n                {father ? (\n                  <PersonLink\n                    onSelectedPerson={setSelectedPerson}\n                    person={father}\n                  />\n                ) : (\n                  fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [isEmpty, setIsEmpty] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((result) => {\n        if (result.length === 0) {\n          setIsEmpty(true);\n        }\n\n        setPeople(result);\n        setIsError(false);\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isEmpty && (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          )}\n\n          {people && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { NavBar } from './components/NavBar';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}